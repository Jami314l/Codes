//                        Bismillahir Rahmanir Rahim
//ALGO:
#pragma GCC optimize("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define all(v) v.begin(), v.end()
#define FILL(a, x) memset(a, x, sizeof(a))
#define ll long long
#define Fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define INF INT_MAX
#define MX 1000010
//#define mod 1000000007
#define dout if(debug) cout
#define FR(i, n) for(int i=0; i<n; i++)
#define FOR(i, n) for(int i=1; i<=n; i++)
const double Pi=acos(-1);
using namespace std;
int debug=01;


ll mulmod(ll a, ll b, ll m)
{
    if(b==0) return 0;
    if(b&1) return (2ll * mulmod(a, b/2, m) % m + a) % m;
    return 2ll * mulmod(a, b/2, m) % m;
}
ll bigmod(ll a, ll p, ll m)
{
    ll ret = 1;
    while(p)
    {
        if(p&1) ret = mulmod(ret, a, m);
        a = mulmod(a, a, m);
        p/=2;
    }
    return ret;
}
int arrr[]={2,3,5,7,11,13,17,19,23};
bool millerRobin(ll p, int iter = 5)
{
    if(p==3 || p==2 || p==5) return true;
    if(p%2==0) return 0;
    if(p<3) return 0;
    for(int i=0;i<9;i++)
    {
        if(p==arrr[i])return true;
        if(p%arrr[i]==0)return false;
    }
    for(int i = 0; i<iter; i++)
    {
        ll a = rand() % (p-4) + 2;
        ll s = p - 1;
        while(s%2==0) s/=2;
        ll mod = bigmod(a, s, p);
        if(mod==1 || mod==p-1) continue;
        bool flag = 0;
        s *= 2;
        while(s != p-1)
        {
            mod = mulmod(mod, mod, p);
            if(mod==p-1){
                flag = 1;
                break;
            }
            s*=2;
        }
        if(flag==0) return 0;
    }
    return 1;
}



void solve(){
    ll n;
    cin>>n;
    cout<<(millerRobin(n)?"YES\n":"NO\n");
}
int main() {
    Fast
    int tst=1;
    cin>>tst;
    for(int T=1; T<=tst; T++){
        //cout<<"Case "<<T<<": ";
        solve();
    }
}
