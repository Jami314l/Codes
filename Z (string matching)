//                        Bismillahir Rahmanir Rahim
///ALGO: Z
#pragma GCC optimize("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define all(v) v.begin(), v.end()
#define FILL(a, x) memset(a, x, sizeof(a))
#define ll long long
#define Fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define INF INT_MAX
#define mx 1000010
/*
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define ordered_multiset tree<pair<int, int>, null_type,less<pair<int, int> >, rb_tree_tag,tree_order_statistics_node_update>
*/
const double Pi=acos(-1);
using namespace std;
int debug=01;
int z[mx];
void calZ(string s){
    int b=0, e=0, n=s.size();
    z[0]=n;
    for(int i=1; i<n; i++){
        if(i<=e) z[i]=min(e-i+1, z[i-b]);
        while(i+z[i]<n&&s[z[i]]==s[i+z[i]) z[i]++;
        if(i+z[i]-1>e) b=i, e=i+z[i]-1;
    }
}
int main() {
    string text, pattern;
    cin>>text>>pattern;
    string s=pattern+"#"+pattern;
    calZ(s);
}

