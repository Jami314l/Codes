//                        Bismillahir Rahmanir Rahim
///ALGO: Manacher's
#pragma GCC optimize("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define all(v) v.begin(), v.end()
#define FILL(a, x) memset(a, x, sizeof(a))
#define ll long long
#define Fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define INF INT_MAX
#define MX 1000010
#define mod 1000000007
#define dout if(debug) cout
#define FR(i, n) for(int i=0; i<n; i++)
#define FOR(i, n) for(int i=1; i<=n; i++)
const double Pi=acos(-1);
using namespace std;
int debug=01;
void manachar(string s){
    int n=s.size();
    n=n+n+1;
    vector<int>v(n);
    v[0]=0;
    v[1]=1;
    int C=1, R=2, mx=0, pos=0;
    for(int i=2; i<n; i++){
        int j=2*C-i;
        v[i]=0;
        if(R-i>0) v[i]=min(v[j], R-i);
        while(((i+v[i])<n && (i-v[i])>0) &&
              (((i+v[i]+1)%2 == 0) || (s[(i+v[i]+1)/2] == s[(i-v[i]-1)/2])))
                v[i]++;
        if(v[i]>mx) mx=v[i], pos=i;
        if(i+v[i]>R) {
            C=i;
            R=i+v[i];
        }
    }
    int cnt=0;
    for(int i=0; i<n; i++) cnt+= (v[i]==mx);
    cout<<mx<<" "<<cnt<<"\n";
}
void solve(){
    string s;
    cin>>s;
    manachar(s);
}
int main() {
    Fast
    int tst=1;
    cin>>tst;
    for(int T=1; T<=tst; T++){
        //cout<<"Case "<<T<<": ";
        solve();
    }
}
